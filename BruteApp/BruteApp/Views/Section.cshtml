@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.Section>
@using BruteApp.Helpers
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
	Layout = "MasterLayout.cshtml";
}


@section styles {
    <link href="~/css/select2.css" rel="stylesheet" />
    <link href="~/css/index.css" rel="stylesheet" />
    <link href="~/css/gray.css" rel="stylesheet">
}

@{
    var musicians = Umbraco.TypedContentAtXPath("//musician");
    //musicians = musicians.Where(x => x.GetPropertyValue("navigationName") != null && x.GetPropertyValue<string>("navigationName").ToLower().Substring(0,1) == Model.Content.NavigationName.ToLower()).OrderBy(x => x.GetPropertyValue("navigationName"));
    musicians = musicians != null ? musicians.Select(x => new Musician(x)).Where(x => x.MusicianSection != null && x.MusicianSection.Id == Model.Content.Id) : null;
    const int pageSize = 30;
    var pages = 1;
    int.TryParse(Request.QueryString["pages"], out pages);
    var totalPages = (int) Math.Ceiling((double) musicians.Count() / pageSize);
    if (pages > totalPages)
    {
        pages = totalPages;
    }
    else
    {
        if (pages < 1)
        {
            pages = 1;
        }
    }


@section sidebar {
    @foreach (var publishedContent in musicians@*.Skip((pages - 1) * pageSize)*@.Take(pageSize))
    {
        var musician = (Musician) publishedContent;
        <li>
            <a href="@musician.Url">
                <span>@musician.NavigationName</span>
                <i class="br-down"></i>
            </a>
            <ul class="collapse">
                @foreach (var publishedContent1 in musician.Children)
                {
                    var song = (Song) publishedContent1;
                    <li>
                        <a href="@song.Url">@song.SongName</a>
                    </li>
                }
            </ul>
        </li>
    }
    
    @if (musicians.Count() - pageSize > 0)
    {
        <button id="loadMore" style="width: 5rem;" onclick="var lis = document.querySelectorAll('.menu-content .items > li[style=\'display: none\']');for (var i = 0; i < lis.length; i++) { lis[i].style.display = 'block'; }document.getElementById('loadMore').style.display = 'none';">Load more</button>
    }


    @foreach (var publishedContent in musicians.Skip(pageSize))
    {
        var musician = (Musician) publishedContent;
        <li style='display: none'>
            <a href="@musician.Url">
                <span>@musician.NavigationName</span>
                <i class="br-down"></i>
            </a>
            <ul class="collapse">
                @foreach (var publishedContent1 in musician.Children)
                {
                    var song = (Song) publishedContent1;
                    <li>
                        <a href="@song.Url">@song.SongName</a>
                    </li>
                }
            </ul>
        </li>
    }
}

    <article>
        <div class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="filters-section">
                        <div class="col-xl-5">
                            <div class="search">
                                <select style="display: none;" class="search-bar" type="text" placeholder="Введите название группы" autocomplete="off" autocorrect="off"></select>
                            </div>
                        </div>
                        @CreateCatlogMenu()
                    </div>
                </div>

                <div class="row" id="musicians">
                    
                    @foreach (var publishedContent in musicians.Skip((pages - 1) * pageSize).Take(pageSize))
                    {
                        var musician = (Musician) publishedContent;
                        <div class="col-sm-6 col-md-4 col-lg-3 col-xl-3 col-xxl-2">
                            <a href="@musician.Url" class="musician">
                                <img src="@(MediaHelper.GetPropertyImageUrl(musician.Image)??MediaHelper.GetPropertyImageUrl(Model.Content.Parent.GetPropertyValue<IPublishedContent>("defaultImage")))" alt="@(!string.IsNullOrWhiteSpace(musician.Alt) ? musician.Alt : musician.NavigationName ?? string.Empty)"/>
                                <div class="description">
                                    <p>@musician.NavigationName</p>
                                    <span>перевод песен</span>
                                </div>
                            </a>
                        </div>
                    }
                    
                </div>
                @if (totalPages > 1)
                {
                    <div class="pagination">            
            
                        <a href="@(pages <= 1 ? "javascript:void(0)" : "?pages=" + (pages-1))">
                            <i class="br-left"></i>
                            <span>назад</span>
                        </a>

                        <div class="pages">
                            @{
                                const int delta = 2;
                                var range = new List<int>();
                                var rangeWithDots = new List<int>();
                                var l = 0;

                                range.Add(1);

                                for (var i = pages - delta; i <= pages + delta; i++)
                                {
                                    if (i < totalPages && i > 1)
                                    {
                                        range.Add(i);
                                    }
                                }

                                range.Add(totalPages);

                                foreach (var item in range)
                                {
                                    if (l != 0)
                                    {
                                        if (item - l == 2)
                                        {
                                            rangeWithDots.Add(l + 1);
                                        }
                                        else
                                        {
                                            if (item - l != 1)
                                            {
                                                rangeWithDots.Add(0);
                                            }
                                        }
                                    }
                                    rangeWithDots.Add(item);
                                    l = item;
                                }

                                foreach (var item in rangeWithDots)
                                {
                                    if (item != 0)
                                    {
                                        <a @(item == pages ? "class=active" : string.Empty) href="?pages=@item">@item</a>
                                    }
                                    else
                                    {
                                        if (item == 0)
                                        {
                                            <a style="cursor: default; user-select: none;">...</a>
                                        }
                                    }
                                }
                            }               
                        </div>
            
                        <a href="@(pages >= totalPages ? "javascript:void(0)" : "?pages=" + (pages+1))">
                            <i class="br-right"></i>
                            <span>далее</span>
                        </a>

                    </div>
                }
            </div>
        </div>
    </article>
}

@section scripts {
    <script src="~/scripts/select2.min.js"></script>
    <script src="~/scripts/search.js"></script> 
}

@helper CreateCatlogMenu()
{
    var sections = Umbraco.TypedContentAtXPath("//section");

    <div class="col-xl-7 no-padding">
        <div class="filter">
            <p>Выберите исполнителя по первой букве (цифре):</p>
            <ul>
                @foreach (var item in sections.OrderBy(x => x.GetPropertyValue("NavigationName")))
                {
                    if ((string) item.GetPropertyValue("navigationName") != string.Empty)
                    {
                        <li>
                            <a href="@item.Url">@item.GetPropertyValue("navigationName")</a>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
}